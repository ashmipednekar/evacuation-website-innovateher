from flask import Flask, request, jsonify
import os

app = Flask(__name__)

# Mock Database Setup (In-memory for demonstration)
db = {
    "buildings": []
}

# Main Page - Fetch Floor Plan for Current Building and Floor
@app.route('/get_floor_plan', methods=['GET'])
def get_floor_plan():
    building_name = request.args.get('building_name')
    floor_number = int(request.args.get('floor_number', 1))

    building = next((b for b in db['buildings'] if b['name'] == building_name), None)
    if not building:
        return jsonify({"error": "Building not found."}), 404

    floor_plan = next((floor for floor in building['floor_plans'] if floor['floor_number'] == floor_number), None)
    if not floor_plan:
        return jsonify({"error": "Floor plan not found for this floor."}), 404

    return jsonify({
        "building": building['name'],
        "address": building['address'],
        "floor_number": floor_plan['floor_number'],
        "exit_image": floor_plan['exit_image']
    })

# Add New Building and Floor Plans (Admin Endpoint)
@app.route('/add_building', methods=['POST'])
def add_building():
    data = request.json

    new_building = {
        "name": data['name'],
        "address": data['address'],
        "num_floors": data['num_floors'],
        "floor_plans": data['floor_plans']
    }

    db['buildings'].append(new_building)
    return jsonify({"message": "Building and floor plans added successfully."}), 201

# Get Current Location (Simulated Geolocation)
@app.route('/current_location', methods=['GET'])
def current_location():
    # Placeholder for actual geolocation integration
    return jsonify({
        "latitude": 40.7128,
        "longitude": -74.0060,
        "address": "New York, NY"
    })

if __name__ == '__main__':
    try:
        app.run(debug=True, use_reloader=False)
    except ImportError as e:
        print("Environment configuration issue: Missing required modules. Please ensure all dependencies are installed.")
    except Exception as e:
        print(f"An error occurred: {e}")
